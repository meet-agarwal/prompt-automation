Here’s the revised prompt with your new requirement baked in:

````markdown
4. CSS FOR DESKTOP TABS + MOBILE ACCORDION  
(All CSS inside one `<style>` block in `<head>`, no JavaScript.)

HTML STRUCTURE (for reference)  
```html
<!-- Desktop Tabbed Info Section -->
<div class="tabs">
  <input type="radio" name="tabs" id="tab1" class="tab-inputs" checked>
  <input type="radio" name="tabs" id="tab2" class="tab-inputs">
  <input type="radio" name="tabs" id="tab3" class="tab-inputs">
  <input type="radio" name="tabs" id="tab4" class="tab-inputs">

  <div class="tab-labels">
    <label for="tab1" class="tab-label">About Us</label>
    <label for="tab2" class="tab-label">Shipping</label>
    <label for="tab3" class="tab-label">Payment</label>
    <label for="tab4" class="tab-label">Return</label>
  </div>

  <div class="tab-contents">
    <div id="content1" class="tab-content">…</div>
    <div id="content2" class="tab-content">…</div>
    <div id="content3" class="tab-content">…</div>
    <div id="content4" class="tab-content">…</div>
  </div>
</div>

<!-- Mobile Accordion Tabs -->
<div class="mobile-tabs">
  <div class="mobile-tab">
    <input type="checkbox" id="mobile-tab1" class="mobile-tab-input">
    <label for="mobile-tab1" class="mobile-tab-label">About Us</label>
    <div class="mobile-tab-content">…</div>
  </div>
  <!-- repeat for mobile-tab2,3,4 -->
</div>
````

DESKTOP (min‑width: 768px)

 Show `.tabs`, hide `.mobile-tabs`.
 Style `.tab-labels` as a horizontal tab bar.
 Active‑tab styling: when a radio input is `:checked`, its corresponding `<label>` gets a different background color (and text color) to visually denote “selected.”
 Use the 4 hidden radio inputs (`.tab-inputs`) + `:checked` + sibling selectors to:

   Display the matching `#contentN.tab-content` in a pop‑up panel below the tabs; hide the others.
   Change only the checked tab’s `<label>` background.
 Pop‑up panel must have: backdrop/box‑shadow, padding, max‑height with scroll, smooth open/close.

MOBILE (max‑width: 767px)

 Hide `.tabs`, show `.mobile-tabs`.
 Style each `.mobile-tab-label` as a full‑width bar with “+” icon when closed, “–” when open.
 Use the checkbox inputs (`.mobile-tab-input`) + `:checked` to toggle the sibling `.mobile-tab-content`: expand/collapse with height transition; auto‑collapse others.
 in this when one tab opens other closes only one tab can be opened at a time 
 use radio buttons to achive this 

GLOBAL

 All CSS must live in one `<style>` block in `<head>`.
 No JavaScript.
 Media query at 768px breakpoint for desktop vs. mobile.
 Maintain readable typography, consistent spacing, and brand‑aligned colors across both modes.

```
```